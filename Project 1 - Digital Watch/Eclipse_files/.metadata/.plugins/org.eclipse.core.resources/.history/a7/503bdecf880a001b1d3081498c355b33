/*
 * app.c
 *
 *  Created on: Oct 9, 2020
 *      Author: montasse
 */


#include "timer.h"


void DW_TIMER1_ISR_callBackFunction(void);


uint8 seconds=0;
uint8 minutes=0;
uint8 hours=0;

int main(void)
{
	configType_TIMER timer1_configs = {TIMER1, TIMER_F_CPU_64, 8000, OCx_DISABLED};
	uint8 _7seg_select=0;

	DDRC = 0b00111111;
	PORTC = 0x00;

	DDRA = 0b00001111;
	PORTA = 0x00;

	__TIMER_CTC_setISRCallBackFuncPointer(TIMER1, DW_TIMER1_ISR_callBackFunction);
	__TIMER_CTC_startTimer(&timer1_configs);

	while(1)
	{
		PORTC = (1<<0);

		PORTA = seconds;

//		_7seg_select++;
//
//		if( _7seg_select == 4 )
//			_7seg_select = 0;
//
//		PORTC = (1<<_7seg_select);
//
//		switch(_7seg_select)
//		{
//		case 0:
//			PORTA = (PORTA & 0xF0) | ((seconds%10) & 0x0F);
//			break;
//		case 1:
//			PORTA = (PORTA & 0xF0) | (((seconds/10)%10) & 0x0F);
//			break;
//		case 2:
//			PORTA = (PORTA & 0xF0) | ((minutes%10) & 0x0F);
//			break;
//		case 3:
//			PORTA = (PORTA & 0xF0) | (((minutes/10)%10) & 0x0F);
//			break;
//		case 4:
//
//			break;
//		case 5:
//
//			break;
//		}

		MILLI_DELAY;MILLI_DELAY;MILLI_DELAY;
	}
	return 0;
}


void DW_TIMER1_ISR_callBackFunction(void)
{
	seconds++;

	if(seconds == 60)
	{
		seconds = 0;
		minutes++;
	}
}
