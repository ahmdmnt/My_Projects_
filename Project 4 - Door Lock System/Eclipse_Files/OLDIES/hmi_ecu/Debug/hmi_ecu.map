Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              ./LCD.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./UART.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./DIO.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./DIO.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

passwords_entires   0x10              ./appl_hmi_ecu.o
cycles              0x2               ./DIO.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./DIO.o
LOAD ./LCD.o
LOAD ./UART.o
LOAD ./appl_hmi_ecu.o
LOAD ./external_interrupt.o
LOAD ./keypad.o
LOAD ./tim.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1cd4
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DIO.o
 .text          0x00000092        0x0 ./LCD.o
 .text          0x00000092        0x0 ./UART.o
 .text          0x00000092        0x0 ./appl_hmi_ecu.o
 .text          0x00000092        0x0 ./external_interrupt.o
 .text          0x00000092        0x0 ./keypad.o
 .text          0x00000092        0x0 ./tim.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.__DIO_setPinDirection
                0x00000092       0xbe ./DIO.o
                0x00000092                __DIO_setPinDirection
 .text.__DIO_enableInternalPullupResistance
                0x00000150       0x60 ./DIO.o
                0x00000150                __DIO_enableInternalPullupResistance
 .text.__DIO_writeOutputPinValue
                0x000001b0       0xbe ./DIO.o
                0x000001b0                __DIO_writeOutputPinValue
 .text.__DIO_readInputPinValue
                0x0000026e       0x62 ./DIO.o
                0x0000026e                __DIO_readInputPinValue
 .text.__DIO_toggleOutputPinValue
                0x000002d0       0x60 ./DIO.o
                0x000002d0                __DIO_toggleOutputPinValue
 .text.__DIO_setPortDirection
                0x00000330       0x58 ./DIO.o
                0x00000330                __DIO_setPortDirection
 .text.__DIO_enablePortInternalPullupResistance
                0x00000388       0x2e ./DIO.o
                0x00000388                __DIO_enablePortInternalPullupResistance
 .text.__DIO_writeOutputPortValue
                0x000003b6       0x32 ./DIO.o
                0x000003b6                __DIO_writeOutputPortValue
 .text.__DIO_readInputPortValue
                0x000003e8       0x2c ./DIO.o
                0x000003e8                __DIO_readInputPortValue
 .text._LCD_init
                0x00000414       0x46 ./LCD.o
                0x00000414                _LCD_init
 .text._LCD_sendCommand
                0x0000045a       0xa4 ./LCD.o
                0x0000045a                _LCD_sendCommand
 .text._LCD_displayCharacter
                0x000004fe       0xa4 ./LCD.o
                0x000004fe                _LCD_displayCharacter
 .text._LCD_displayString
                0x000005a2       0x38 ./LCD.o
                0x000005a2                _LCD_displayString
 .text._LCD_displayIntegerVariable
                0x000005da       0xb2 ./LCD.o
                0x000005da                _LCD_displayIntegerVariable
 .text._LCD_adjustCursorPosition
                0x0000068c       0x84 ./LCD.o
                0x0000068c                _LCD_adjustCursorPosition
 .text._LCD_displayString_atCursor
                0x00000710       0x32 ./LCD.o
                0x00000710                _LCD_displayString_atCursor
 .text._LCD_clearScreen
                0x00000742       0x14 ./LCD.o
                0x00000742                _LCD_clearScreen
 .text.__UART_init
                0x00000756      0x184 ./UART.o
                0x00000756                __UART_init
 .text.__UART_sendByte
                0x000008da       0x42 ./UART.o
                0x000008da                __UART_sendByte
 .text.__UART_sendString
                0x0000091c       0x38 ./UART.o
                0x0000091c                __UART_sendString
 .text.__UART_receiveByte
                0x00000954       0x50 ./UART.o
                0x00000954                __UART_receiveByte
 .text.__UART_receiveString
                0x000009a4       0x52 ./UART.o
                0x000009a4                __UART_receiveString
 .text.main     0x000009f6      0x314 ./appl_hmi_ecu.o
                0x000009f6                main
 .text.systemUserAuthenticate
                0x00000d0a      0x140 ./appl_hmi_ecu.o
                0x00000d0a                systemUserAuthenticate
 .text.systemPasswordSetup
                0x00000e4a      0x56c ./appl_hmi_ecu.o
                0x00000e4a                systemPasswordSetup
 .text.externalInterrupt1_OpenButton__ISRFunc
                0x000013b6       0x30 ./appl_hmi_ecu.o
                0x000013b6                externalInterrupt1_OpenButton__ISRFunc
 .text.externalInterrupt0_CloseButton_ISRFunc
                0x000013e6       0x34 ./appl_hmi_ecu.o
                0x000013e6                externalInterrupt0_CloseButton_ISRFunc
 .text.__vector_1
                0x0000141a       0x5a ./external_interrupt.o
                0x0000141a                __vector_1
 .text.__INT0_setISRCallBackFuncPointer
                0x00001474       0x24 ./external_interrupt.o
                0x00001474                __INT0_setISRCallBackFuncPointer
 .text.__INT0_init
                0x00001498      0x100 ./external_interrupt.o
                0x00001498                __INT0_init
 .text.__vector_2
                0x00001598       0x5a ./external_interrupt.o
                0x00001598                __vector_2
 .text.__INT1_setISRCallBackFuncPointer
                0x000015f2       0x24 ./external_interrupt.o
                0x000015f2                __INT1_setISRCallBackFuncPointer
 .text.__INT1_init
                0x00001616      0x100 ./external_interrupt.o
                0x00001616                __INT1_init
 .text._KEYPAD_getCurrentPressedKey
                0x00001716       0xc8 ./keypad.o
                0x00001716                _KEYPAD_getCurrentPressedKey
 .text._KEYPAD_4x3_keyMapping
                0x000017de      0x116 ./keypad.o
 .text.__vector_19
                0x000018f4       0x5a ./tim.o
                0x000018f4                __vector_19
 .text.__vector_6
                0x0000194e       0x5a ./tim.o
                0x0000194e                __vector_6
 .text.__TIMER_CTC_setISRCallBackFuncPointer
                0x000019a8       0x5c ./tim.o
                0x000019a8                __TIMER_CTC_setISRCallBackFuncPointer
 .text.__TIMER_CTC_startTimer
                0x00001a04      0x1c0 ./tim.o
                0x00001a04                __TIMER_CTC_startTimer
 .text.__TIMER_CTC_stopTimer
                0x00001bc4       0xa0 ./tim.o
                0x00001bc4                __TIMER_CTC_stopTimer
 .text.libgcc   0x00001c64       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00001c64                __udivmodhi4
 .text.libgcc   0x00001c8c       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00001c8c                __udivmodsi4
 .text.libgcc   0x00001cd0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001cd0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001cd0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001cd0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001cd0        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00001cd0                exit
                0x00001cd0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001cd0        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00001cd4                _etext = .

.data           0x00800060      0x144 load address 0x00001cd4
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./DIO.o
 .data          0x00800060        0x0 ./LCD.o
 .data          0x00800060        0x0 ./UART.o
 .data          0x00800060      0x126 ./appl_hmi_ecu.o
 .data          0x00800186        0x0 ./external_interrupt.o
 .data          0x00800186        0x0 ./keypad.o
 .data          0x00800186        0x0 ./tim.o
 .data          0x00800186        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00800186        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800186        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800186        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800186        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.ddr_regs
                0x00800186        0x8 ./DIO.o
                0x00800186                ddr_regs
 .rodata.pin_regs
                0x0080018e        0x8 ./DIO.o
                0x0080018e                pin_regs
 .rodata.port_regs
                0x00800196        0x8 ./DIO.o
                0x00800196                port_regs
 .rodata.C.0.1375
                0x0080019e        0x5 ./appl_hmi_ecu.o
 *(.gnu.linkonce.d*)
                0x008001a4                . = ALIGN (0x2)
 *fill*         0x008001a3        0x1 00
                0x008001a4                _edata = .
                0x008001a4                PROVIDE (__data_end, .)

.bss            0x008001a4       0x1d
                0x008001a4                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008001a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x008001a4        0x0 ./DIO.o
 .bss           0x008001a4        0x0 ./LCD.o
 .bss           0x008001a4        0x0 ./UART.o
 .bss           0x008001a4        0x0 ./appl_hmi_ecu.o
 .bss           0x008001a4        0x0 ./external_interrupt.o
 .bss           0x008001a4        0x0 ./keypad.o
 .bss           0x008001a4        0x0 ./tim.o
 .bss           0x008001a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x008001a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x008001a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008001a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008001a4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.cycle     0x008001a4        0x1 ./LCD.o
 .bss.Authenticated_FLAG
                0x008001a5        0x1 ./appl_hmi_ecu.o
                0x008001a5                Authenticated_FLAG
 .bss.password_length
                0x008001a6        0x1 ./appl_hmi_ecu.o
                0x008001a6                password_length
 .bss.g_INT0_callBack_ptr
                0x008001a7        0x2 ./external_interrupt.o
 .bss.g_INT1_callBack_ptr
                0x008001a9        0x2 ./external_interrupt.o
 .bss.g_TIMER0_callBack_ptr
                0x008001ab        0x2 ./tim.o
 .bss.g_TIMER1_callBack_ptr
                0x008001ad        0x2 ./tim.o
 *(COMMON)
 COMMON         0x008001af        0x2 ./DIO.o
                0x008001af                cycles
 COMMON         0x008001b1       0x10 ./appl_hmi_ecu.o
                0x008001b1                passwords_entires
                0x008001c1                PROVIDE (__bss_end, .)
                0x00001cd4                __data_load_start = LOADADDR (.data)
                0x00001e18                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001c1        0x0
                0x008001c1                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001c1                PROVIDE (__noinit_end, .)
                0x008001c1                _end = .
                0x008001c1                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x2274
 *(.stab)
 .stab          0x00000000      0x4bc ./DIO.o
 .stab          0x000004bc      0x534 ./LCD.o
                                0x5d0 (size before relaxing)
 .stab          0x000009f0      0x36c ./UART.o
                                0x408 (size before relaxing)
 .stab          0x00000d5c      0xa68 ./appl_hmi_ecu.o
                                0xb28 (size before relaxing)
 .stab          0x000017c4      0x3e4 ./external_interrupt.o
                                0x648 (size before relaxing)
 .stab          0x00001ba8      0x294 ./keypad.o
                                0x330 (size before relaxing)
 .stab          0x00001e3c      0x438 ./tim.o
                                0x690 (size before relaxing)

.stabstr        0x00000000     0x124b
 *(.stabstr)
 .stabstr       0x00000000     0x124b ./DIO.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(hmi_ecu.elf elf32-avr)
LOAD linker stubs
